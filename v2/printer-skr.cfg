## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

[include mainsail.cfg]
[include brush.cfg]

[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-path/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_0A60001948104AAFFCD1675DC12000F5-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-path/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_1170FF01881C4AAF975F685DC42000F5-if00
##--------------------------------------------------------------------

[mcu huvud]
canbus_uuid: d17de66f3673

[mcu spider]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_32000A000250305538333620-if00

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350   			#Max ?
square_corner_velocity: 5.0  #Can experiment with 8.0, default 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
step_distance: 0.00625
#endstop_pin: P1.29
endstop_pin: huvud:PA1
position_min: 0
position_endstop: 300
position_max: 300
# homing_speed: 25
homing_speed: 75   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: P1.10
microsteps: 16
interpolate: True
run_current: 0.9
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
step_distance: 0.00625
endstop_pin: P1.28
position_min: 0
position_endstop: 307
position_max: 309
# homing_speed: 25
homing_speed: 75  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: P1.9
microsteps: 16
interpolate: True
run_current: 0.9
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
step_distance: 0.00250
endstop_pin: z:P1.27
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 290
position_min: -0.15
homing_speed: 15.0
second_homing_speed: 3.0
homing_retract_dist: 3.0

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.10
microsteps: 16
interpolate: True
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In Y Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: !z:P0.20
enable_pin: !z:P2.8
step_distance: 0.00250

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:P1.9
microsteps: 16
interpolate: True
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In Z Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: z:P2.11
enable_pin: !z:P0.21
step_distance: 0.00250

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:P1.8
microsteps: 16
interpolate: True
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In E0 Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: !z:P0.11
enable_pin: !z:P2.12
step_distance: 0.00250

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: z:P1.4
microsteps: 16
interpolate: True
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MCU X/Y
[extruder]
#step_pin: P2.13
#dir_pin: !P0.11
#enable_pin: !P2.12

step_pin: huvud:PB3
dir_pin: huvud:PB4
enable_pin: !huvud:PB6

rotation_distance: 22.67895
gear_ratio: 50:10
microsteps: 16
full_steps_per_rotation: 200

##	16 microsteps Mobius 3 ~= 0.00180
##	Update value below when you perform extruder calibration
##	Higher value means less filament extruded
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	step_distance = 98 / 100 * step_distance_old
##  0.00240 a good starting value for Afterburner, 0.00180 for Mobius
#step_distance: 0.00239 
nozzle_diameter: 0.400
filament_diameter: 1.75
#heater_pin: P2.7
heater_pin: huvud:PA6
##	Validate the following thermistor type to make sure it is correct
# sensor_type: NTC 100K beta 3950
sensor_type: PT1000
#sensor_pin: P0.24
sensor_pin: huvud:PA0
pullup_resistor: 2200
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 10
max_extrude_only_distance: 100.0
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
# pressure_advance: 0.05
##	Default is 0.040, leave stock
# pressure_advance_smooth_time: 0.040

##	E0 on MCU X/Y
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
#uart_pin: P1.4
uart_pin: huvud:PA10
tx_pin: huvud:PA9
interpolate: False
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
sensor_type: NTC 100K beta 3950
sensor_pin: z:P0.25
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769
# 60hz frequency for US
pwm_cycle_time: 0.0166

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##	Z_MAX on mcu_z
##	If your probe is NO instead of NC, add change pin to !z:P0.10
pin: ^z:P0.10
x_offset: 0
y_offset: 25.0
z_offset: 1
speed: 20.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3


#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - XYE board, HE1 Connector
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - XYE board, Fan Pin
#pin: P2.3
pin: huvud:PA7
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan controller_fan]
##	Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

#[heater_fan exhaust_fan]
##	Exhaust fan - Z board, HE0 Connector
#pin: z:P2.7
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[pause_resume]

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
pin: P2.5
pwm: true
value: 0
scale: 10
cycle_time: 0.01

# Heater cooling fans (one may define any number of sections with a
# "heater_fan" prefix). A "heater fan" is a fan that will be enabled
# whenever its associated heater is active.
[heater_fan counter]
pin: z:P2.5
heater: extruder
#   Name of the config section defining the heater that this hour counter is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 190
#   A temperature (in Celsius) that the heater must drop below before
#   the hour counter is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   This should be kept at 1.0
shutdown_speed: 0.0
#   The desired fan speed (expressed as a value from 0.0 to 1.0) if
#   the micro-controller software enters an error state. This is set
#	to 0.0 so that the counter won't go on while in error state.

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[homing_override]
axes: z
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
   G28 Y
   G28 X
   ##	XY Location of the Z Endstop Switch
   ##	Update X0 and Y0 to your values (such as X157, Y305) after going through
   ##	Z Endstop Pin Location Definition step.
   G0 X203 Y307 F3600 
   
   G28 Z
   G0 Z10 F1800
   # G0 X150 Y150 F3600
   
[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 300mm Build
gantry_corners:
	-60,-10
	360,370
##	Probe points
points:
	50,25
	50,225
	250,225
	250,25

#--------------------------------------------------------------------
speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7
algorithm: bicubic
relative_reference_index: 24

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have. Display connects to Z MCU
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: z:P1.19
#sclk_pin: z:P1.20
#sid_pin: z:P1.18
#menu_timeout: 40
#encoder_pins: ^z:P3.26, ^z:P3.25 
#click_pin: ^!z:P0.28

#[output_pin beeper]
#pin: z:P1.30

#--------------------------------------------------------------------

[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: z:P1.18
a0_pin: z:P1.19
encoder_pins: ^z:P3.25,^z:P3.26
click_pin: ^!z:P0.28
contrast: 63

[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: z:P1.21
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

# You can check the state of the button by using
# QUERY_BUTTON button=my_gcode_button
[gcode_button heat_button]
pin: !z:P1.29
press_gcode:
  HEAT_SOAK
#release_gcode:
# A list of G-Code commands to execute when the button is released.
# G-Code templates are supported. The default is to not run any
# commands on a button release.

[gcode_button pause_button]
pin: !z:P1.28
press_gcode:
  PAUSE_OR_RESUME
#release_gcode:
# A list of G-Code commands to execute when the button is released.
# G-Code templates are supported. The default is to not run any
# commands on a button release.

[gcode_button lights_button]
pin: !z:P1.26
press_gcode:
  TOGGLE_LIGHTS
#release_gcode:
# A list of G-Code commands to execute when the button is released.
# G-Code templates are supported. The default is to not run any
# commands on a button release.

[gcode_button level_button]
pin: !z:P1.25
press_gcode:
  {% if (printer.idle_timeout.printing_time == 0) and ("z" not in printer.toolhead.homed_axes) %}
    G28
  {% endif %}
#release_gcode:
# A list of G-Code commands to execute when the button is released.
# G-Code templates are supported. The default is to not run any
# commands on a button release.

#####################################################################
# 	Macros
#####################################################################

[gcode_macro Get_Probe]
gcode:
    G0 X252 Y309 Z20 F12000        #Spot above where the carriage magnets line up with the magprobe magnets 
                                    #    (with magprobe in the dock)
    G0 X252 Y309 Z1 F3600            #move -Z where all the magnets pairs first fully grab onto each other
    G0 X252 Y290 Z1 F1800            #Move -Y so the probe is fully clear of the the arms of the dock
    G0 X252 Y290 Z20 F3600            #move +Z so any move from here clears the buildplate.

#   Dock Probe
[gcode_macro Dock_Probe]
gcode:
    G0 X252 Y290 z10 F12000        #Above +Z and forward -Y of where magprobe side cutouts line up with dock arms
                                    #    (allows build plate clearance for next downward move to line up magprobe to arms)
    G0 X252 Y290 Z1 F3600            #Location where the side cutouts of the magprobe line up with the front of dock arms
    G0 X252 Y309 Z1 F3600            #move the magprobe +Y into the dock, engaging the arms
    G0 X210 Y309 Z1 F1800            #move +X and +Z to disengage the magprobe from the carriage
    G0 X210 Y290 Z1 F3600            #Move +Z and -Y to a safe spot where further moves won't collide with dock

[gcode_macro MAYBE_HOME]
gcode:
  {% if "z" not in printer.toolhead.homed_axes %}
    G28                             ;Only G28 Home if needed
  {% endif %}
    
[gcode_macro HEAT_SOAK]
default_parameter_BED_TEMP: 100
gcode:
  MAYBE_HOME
  G0 Z10
  G0 X150 Y150 F8000
  M190 S{BED_TEMP}
  M117 Soaking
  {% if printer.extruder.temperature < 40 %}
    _print_ar T="Soaking till temp reached."
    TEMPERATURE_WAIT sensor=extruder minimum=40
  {% endif %}
  _print_ar T="Waiting for five minutes."
  G4 P600000
  _print_ar T="Soak done."
  
## use this if you need more then one action responeses in a order
## insight a macro
## _print_ar T="PRINT_START finished"
[gcode_macro _print_ar]
gcode:
  {action_respond_info("%s" % (params.T|string))}
   
[gcode_macro PRINT_START]
default_parameter_BED: 100
default_parameter_EXTRUDER: 235
gcode:
    # Wait for chamber to reach temperature
    _print_ar T="Calling heat soak"
    HEAT_SOAK BED_TEMP={BED}
    _print_ar T="After heat soak"
    # Use absolute coordinates
    G90
    # Set and wait for nozzle to reach temperature
    _print_ar T="Heating extruder"
    M109 S{EXTRUDER}
    _print_ar T="Extruder heated"
    
    # Set G-Code Z offset
    # SET_GCODE_OFFSET Z=0.08
    
    # Home the printer 
    BED_MESH_CLEAR
    
    MAYBE_HOME
    QUAD_GANTRY_LEVEL
    G28 Z
    
    # BED_MESH_PROFILE load=default
    
    # Purge the hotend
    CLEAN_NOZZLE
    G28 Z
    G0 X150 Y150 F5000
    #PURGE_LINE
    
    M117 Printing
    
[gcode_macro BATHTIME]
gcode:
  MAYBE_HOME
  G0 Z100
  G0 X200 F5000
  G0 Y50 F5000
   
[gcode_macro PURGE_LINE]
gcode:
  M117 Prime Line
  {% if "z" not in printer.toolhead.homed_axes %}
    G28                             ;Only G28 Home if needed
  {% endif %}
  
  G0 X115 Y5 Z0.2 F8000     ; Move to start position
  G92 E0                        ; Reset Extruder
  G1 E5 F600                    ; Extrude a little
  G1 X5 E20 F1000               ; Draw line
  G92 E0                        ; Reset Extruder
  G1 E-1.0 F3600                ; Retract
  G92 E0
  G0 X5.5 F18000                ; Wipe line 1
  G0 X0 F18000                  ; Wipe line 2
  G0 Z10 F1000                  ; Raise nozzle
  G90                           ; Absolute positioning

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0 X300 Y300 F3600             ; park nozzle at rear
    BED_MESH_CLEAR
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    # Zero the extruder
    G90
    G92 E0
    # Retract remaining filament
    G1 E-3.3 F3600
    TURN_OFF_HEATERS
    # Turn off fan
    M107
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 230
default_parameter_Y: 230
default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    {% if printer.extruder.temperature > 200 %}
      G1 E-1.7 F2100
      G1 Z{Z}
      G90
      G1 X{X} Y{Y} F6000
      G91
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    G91
    {% if printer.extruder.temperature > 200 %}
      G1 E1.7 F2100
      G91
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro PAUSE_OR_RESUME]
variable_paused: 0
gcode:
  {% if printer.idle_timeout.printing_time > 0 %}
    {% if printer.pause_resume.is_paused %}
      M117 Resumed
    {% else %}
      M117 Paused
    {% endif %}
  {% endif %}
    
[gcode_macro TOGGLE_LIGHTS]
variable_lights: 0
gcode:
  {% if printer["output_pin caselight"].value == 0 %}
    # SET_GCODE_VARIABLE MACRO=TOGGLE_LIGHTS VARIABLE=lights VALUE=1
    LIGHTS_ON
  {% else %}
    # SET_GCODE_VARIABLE MACRO=TOGGLE_LIGHTS VARIABLE=lights VALUE=0
    LIGHTS_OFF
  {% endif %}
  
[gcode_macro LIGHTS_ON]
gcode:
  SET_PIN PIN=caselight VALUE=0.1

[gcode_macro LIGHTS_OFF]
gcode:
  SET_PIN PIN=caselight VALUE=0.0
  
[gcode_macro LIGHTS_MAX]
gcode:
  SET_PIN PIN=caselight VALUE=1.0

[menu __main __octoprint]
type: disabled
  
[menu __main __lights]
type: list
name: Lights

[menu __main __lights __turnon]
type: command
name: Lights ON
gcode:
    LIGHTS_ON

[menu __main __lights __turnbright]
type: command
name: Lights MAX
gcode:
    LIGHTS_MAX

[menu __main __lights __turnoff]
type: command
name: Lights OFF
gcode:
    LIGHTS_OFF

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 35.852
#*# pid_ki = 1.251
#*# pid_kd = 256.794
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.050
#*# pid_ki = 1.410
#*# pid_kd = 94.217
#*#
#*# [stepper_z]
#*# position_endstop = 1.500
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.040000, 0.035000, 0.037500, 0.040000, 0.032500, 0.035000, 0.045000
#*# 	  0.037500, 0.037500, 0.032500, 0.027500, 0.015000, 0.022500, 0.027500
#*# 	  0.030000, 0.022500, 0.015000, 0.002500, -0.002500, -0.002500, 0.007500
#*# 	  0.032500, 0.025000, 0.010000, 0.000000, -0.007500, -0.012500, -0.000000
#*# 	  0.035000, 0.022500, 0.015000, 0.005000, -0.007500, -0.010000, -0.002500
#*# 	  0.040000, 0.037500, 0.030000, 0.030000, 0.022500, 0.010000, 0.012500
#*# 	  0.045000, 0.060000, 0.062500, 0.065000, 0.065000, 0.055000, 0.052500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 7
#*# max_y = 259.96
#*# mesh_x_pps = 2
#*# max_x = 259.96
